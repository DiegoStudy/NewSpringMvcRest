pipeline {
  agent any

  stages {
    stage('Hello') {
      steps {
        echo 'Hello Worldss'
        git branch: 'main', credentialsId: '47f9858f-9dfd-4b0f-a4d3-ddd52bd4ce65', url: 'https://github.com/DiegoStudy/NewSpringMvcRest.git'
      }
    }
    stage('Initialize') {
      steps {
        echo 'Este es el primer paso'
      }
    }
    stage('Build') {
      steps {
        bat 'mvn -B package'
        echo 'Este es el segundo paso'
      }
    }
    stage('Test') {
      steps {
        bat 'mvn clean verify'
        echo 'Este es el tercer paso (Test)'
      }
    }
    stage('Publish to Nexus Repository Manager') {
      steps {
        script {
          pom = readMavenPom file: "pom.xml"
          filesByGlob = findFiles(glob: "target/*.${pom.packaging}")
          echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
          artifactPath = filesByGlob[0].path
          artifactExists = fileExists artifactPath
          if (artifactExists) {
            echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}"
            nexusArtifactUploader(
              nexusVersion: "nexus3",
              protocol: "http",
              nexusUrl: "http://localhost:8081",
              groupId: pom.groupId,
              version: "${pom.version}",  // Asegura que el valor sea una cadena de texto
              repository: "RepoDePrueba",
              credentialsId: "DEscobar",
              artifacts: [
                [artifactId: 'SpringRestExample', classifier: '', file: artifactPath, type: 'war']
              ]
            )
          } else {
            error "*** File: ${artifactPath}, could not be found"
          }
        }
      }
    }
  }
  
  post {
    always {
      junit(allowEmptyResults: true, testResults: '*/test-reports/*.xml')
    }
  }
}
